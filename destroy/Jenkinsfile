pipeline {
  agent any 
  tools {
        terraform 'terraform1.0.9'
  }
   stages { 
    stage('Preparation') { 
      steps {
      git 'https://github.com/ishrivatsa/demo-secure-state.git'
      }
    }
   
    stage('Install Dependencies') {
      steps{
        //sh "sudo apt install wget zip python-pip -y"
        sh "curl -o terraform.zip https://releases.hashicorp.com/terraform/0.12.5/terraform_0.12.5_linux_amd64.zip"
        sh "unzip terraform.zip"
        sh "sudo mv terraform /usr/bin"
        sh "rm -rf terraform.zip"
      }       
    }
    stage('Destroy') {
      environment {         
        TF_VAR_option_5_aws_ssh_key_name = "adminKey"
        TF_VAR_option_6_aws_ssh_key_name = "adminKey"
        TF_VAR_option_1_aws_access_key = credentials('ACCESS_KEY_ID')
        TF_VAR_option_2_aws_secret_key = credentials('SECRET_KEY')
        AWS_ACCESS_KEY_ID= credentials('ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY= credentials('SECRET_KEY')      
      }
      steps {      
        sh "cd fitcycle_terraform/ && terraform init --backend-config=bucket=demodars --backend-config=key=terraform.tfstate --backend-config=region=us-east-1 -lockfile=false && terraform state pull && terraform destroy --var-file=example_vars_files/us_east_1_mysql.tfvars --auto-approve"
      }
      post {
        success {
            echo 'success'
        }
        failure {
            echo 'failed'
        }
        aborted {           
            echo 'aborted'
        }
      }
    }
  }
}